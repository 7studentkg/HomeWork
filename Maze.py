""" ‚Äã‚Äå‚Äç‚Äå‚ÄçLesson 1 " Hello, World " / Text‚Äã‚Äã"""
print("I will show you Magic")
print("Are you ready?") # ‚Å°‚Å¢‚Å¢‚Å°‚Å£‚Å¢‚Å¢Ok I'm joking‚Å°‚Å°
#‚Å°‚Å£‚Å¢ ‚Å°‚Å£‚Å¢‚Å¢I will show you how work python, but it's not python what you think now ,‚Å°
#‚Å°‚Å£‚Å°‚Å£‚Å¢‚Å¢ This basic code , here we will work with math , yes us need math , don't cry buddy ,‚Å°‚Å°
# ‚Å°‚Å£‚Å¢‚Å¢Not only math , we will use our logic‚Å°
# ‚Å°‚Å£‚Å¢‚Å¢We will think , this spend most time Than math , yeah I'm not joking‚Å°

print()

#print('"Kevin\'s favorite word is "Women""') # ‚Å°‚Å¢‚Å£‚Å¢–µ—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º –≤ —Ç–µ—Å–∫—Ç–µ –∫–∞–≤—ã—á–∫–∏ —Ç–æ –¥–µ–ª–∞–µ–º —ç—Ç–æ —Ç–∞–∫‚Å°
#
#print()
#
## ‚Å°‚Å¢‚Å£‚Å¢–ï—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–æ –º—ã use { \n }‚Å°
#print ('I see you\nYou see me\nHow pleasent\nThis feeling ')
## ‚Å°‚Å¢‚Å¢‚Å¢—É –Ω–∞—Å –¥–æ–ª–∂–Ω–æ –≤—ã–π—Ç–∏ —ç—Ç–æ‚Å°
## ‚Å°‚Å£‚Å£‚Å¢ùóú ùòÄùó≤ùó≤ ùòÜùóºùòÇ‚Å°
## ‚Å°‚Å£‚Å£‚Å¢ùó¨ùóºùòÇ ùòÄùó≤ùó≤ ùó∫ùó≤‚Å°
## ‚Å°‚Å£‚Å£‚Å¢ùóõùóºùòÑ ùóΩùóπùó≤ùóÆùòÄùó≤ùóªùòÅ‚Å°
## ‚Å°‚Å£‚Å£‚Å¢ùóßùóµùó∂ùòÄ ùó≥ùó≤ùó≤ùóπùó∂ùóªùó¥‚Å°
#
#print()
#print ("Begin") # Text
#print ("\n") # ‚Å°‚Å¢‚Å£‚Å¢–°—Ç—Ä–æ–∫–∞ —Å –Ω–µ–≤–∏–¥–∏–º—ã–º —Å–∏–º–≤–æ–ª–æ–º –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ ,–º—ã —É–≤–∏–¥–µ–º –¥–≤–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏‚Å°
#print ("End") # Text
#
#print()
#
## ‚Å°‚Å¢‚Å£‚Å¢–æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞‚Å°
#print('Butter'+'fly') # –°–ª–∏–≤–æ—á–Ω–æ–µ –º–∞—Å–ª–æ + –ª–µ—Ç–∞—Ç—å = –ë–∞–±–æ—á–∫–∞ #Butterfly
#
#print()
#
## ‚Å°‚Å¢‚Å£‚Å¢–µ—Å–ª–∏ —Ö–æ—Ç–∏–º —á—Ç–æ –±—ã –º–µ–¥–∂—É —Å–ª–æ–≤–∞–º–∏ –±—ã–ª –ø—Ä–æ–±–µ–ª ...‚Å°
#print ('I Know' + ' you want' + ' me baby' )
#
#print()
#
#‚Äã‚Äå‚Äç‚Äå‚Å°‚Å¢‚Å£‚Å¢ Lesson 2 / –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ‚Å°‚Äã
## ‚Å°‚Å£‚Å¢‚Å£–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–µ–π—à–∞—è –∏–º–µ–Ω–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö ,‚Å°
## ‚Å°‚Å£‚Å¢‚Å£–≤ –∫–æ—Ç–æ—Ä–æ–π –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –∏–ª–∏ –∫–æ–Ω–µ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã.‚Å°
#
#
#lesson2 = "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è "
#lesson_2 ="‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–µ–π—à–∞—è –∏–º–µ–Ω–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö"
#print ( lesson2 + lesson_2 )
#
#
## ‚Å°‚Å¢‚Å£‚Å¢–ú—ã –º–æ–∂–µ–º –ø–∏—Å–∞—Ç—å –∏–º–µ–Ω–∞/–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –ø–∞—Ä—É —Å—Ç–∏–ª—è—Ö‚Å°
#
#name = 1
#Name = 2
#NaMe = 3
#MyName = NaMe
#my_name = 4
#My_name = my_name
#My_Name = My_name
#day = "5/365"
#day2 = day
#day3 = day2
#
#print (name)
#print (Name)
#print (MyName)
#print (My_Name)
#print (day3)
#
#print()
#
## ‚Å°‚Å¢‚Å£‚Å£–ï—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º + –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å —Ç–µ–∫—Å—Ç–æ–º , use { f' {} '}‚Å°
## ‚Å°‚Å£‚Å¢‚Å£–ë—É–∫–≤–∞ f —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ç–æ, —á—Ç–æ –º—ã —Å–æ–∑–¥–∞–µ–º f-—Å—Ç—Ä–æ–∫—É ‚Äî —à–∞–±–ª–æ–Ω,‚Å°
## ‚Å°‚Å£‚Å¢‚Å£–≤ –∫–æ—Ç–æ—Ä—ã–π —Å –ø–æ–º–æ—â—å—é —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–æ–∫ –ø–æ–¥—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.‚Å°
#
#Day = 365
#Year = f'{Day} days in a year'
#
#print (Year)
#
## ‚Å°‚Å¢‚Å£‚Å£–µ—Å–ª–∏ –º—ã –ø–æ–ø—ã—Ç–∞–µ–º—Å—è + –ø–µ—Ä–µ–º—É–Ω—É—é –∏ —Ç–µ–∫—Å—Ç –∏–ª–∏ —á–∏—Å–ª–æ –±—É–¥–µ—Ç Error‚Å°
## x = 123
## y = "four five six"
## z = x + y
## print( z )
#
#print()
#
## ‚Å°‚Å¢‚Å£‚Å¢–ü—Ä–µ—Å—Ç–∞–≤—å—Ç–µ —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Ç–µ–∫—Å—Ç –∏–ª–∏ —á–∏—Å–ª–∞ –∏–∑ –Ω–∏—Ö –≤–∞–º –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –∏–ª–∏ —á–∏—Å–ª–æ‚Å°
#
#number_0 = "David"
## ‚Å°‚Å¢‚Å£‚Å¢–ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞ –≤ ‚Å°‚Å£‚Å¢‚Å¢‚Å°‚Å¢‚Å£‚Å¢index –±—É–¥–µ—Ç –∑–Ω—á–∞–∏—Ç—å [0] etc‚Å°‚Å°
#print (number_0 [0]) # => D
## ‚Å°‚Å¢‚Å£‚Å¢–µ—Å–ª–∏ —Ö–æ—Ç–∏–º –≤–∏–¥–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏—é –±—É–∫–≤—É –≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ —á—Ç–æ —Å—á–∏—Ç–∞—Ç—å –∫–∞–∫–æ–π index –±—É–∫–≤—ã –º—ã –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫‚Å°
#print(number_0[-1]) # => d
## ‚Å°‚Å¢‚Å£‚Å£–î–æ –≤–∞—Å –¥–∞—à–ª–æ –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç , –î—É–º–∞–π—Ç–µ —Ö–æ—Ä–æ—à–µ–Ω–∫–æ‚Å°
#
#print()
#
#date = '18-12-2022'
#
#print(date[6])  # => 2
#print(date[9])  # => 4
#
#print()
#
#year = date[6:10]
#print(year)  # => 2022
#
##name[–Ω–∞—á–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å:–∫–æ–Ω–µ—á–Ω—ã–π –∏–Ω–¥–µ–∫—Å]
#
#day = date[0:2] # => 18
#month = date[3:5] # => 12
#print(day)
#print(month)
#
#print()
#
## –ú–æ–∂–Ω–æ –∏ —Ç–∞–∫
#
#Last_name_and_first_name = 'Michael Jordan'
#
#print('–§–∞–º–∏–ª–∏—è: ' + Last_name_and_first_name[0:7]) # => Michael
#print('–ò–º—è: ' + Last_name_and_first_name[8:14]) # => Jordan
#
#print()
#
##–∏–ª–∏ —Ç–∞–∫
#
#Last_name_and_first_name2 = 'Mike Tyson'
#
#print('–§–∞–º–∏–ª–∏—è: ' + Last_name_and_first_name2[:4]) # => Mike
#print('–ò–º—è: ' + Last_name_and_first_name2[5:]) # => Tyson
#
#print()
#
#football = 'Argentina' # Qatar World Cup 2022 / ‚Å°‚Å£‚Å¢‚Å£Argentina Champion‚Å°
#
#print(football[5:-1]) # => tin
#print(football[-7:5]) # => gen
#print(football[0:-4]) # => Argen
#print(football[0:6:2]) # =>Agn  /  0:6 => Argent :2 –∫–∞–∂–¥–∞—è –≤—Ç–æ—Ä–æ—è  => Agn
#print(football[:9:2]) # => Agnia / –∫–∞–∂–¥—É—é –≤—Ç–æ—Ä—É—é –±—É–∫–≤—É
#print(football[2::3]) # => gta / I'm surprised myself
#print(football[4:0:-1])# => negr   = > I'm not racist
#print(football[::-1]) # anitnegrA
#print(football[::1]) # Argentina
#
#
#print()
#
## ‚Å°‚Å¢‚Å£‚Å¢–ï—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –±—É–∫–≤ –∏–ª–∏ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–º –º—ã use len()‚Å°
#
#Song = 'Phonk' # => 5
#numbers ='123456' # => 6
#numbers2='123456 7' # => 8 –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç–∞–º –µ—Å—Ç—å –ø—Ä–æ–±–µ–ª
#
#print(len(Song))
#print(len(numbers))
#print(len(numbers2))
#
#print()
#
## –º–æ–∂–Ω–æ —Ç–∞–∫
#Song2 = 'Classic'
#print(len(numbers2) -1) # => 7 –¥—É–º–∞—é –≤—ã —É–∂–µ –¥–æ–≥–∞–¥–∞–ª–∏—Å—å –ø–æ—á–µ–º—É 7
#print(f'–ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª: {Song[len(Song) - 1]}') # => k
#print(f'–ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª: {Song2[len(Song) - 1]}') # => s
## –ü–æ–¥—É–º–∞—Ç–µ –ø–æ—á–µ–º—É —Ç–∞–∫ ...
## ‚Å°‚Å£‚Å¢‚Å£–£—Å–ª–æ–≤–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏—â—ë —Å–ª–æ–∂–Ω–µ–µ‚Å°‚Å°
## ‚Å°‚Å£‚Å¢‚Å£–ö–∞–∫ –≤—ã —É–≤–∏–¥–∏—Ç–µ –¥–∞–ª—å—à–µ, –≤—ã—Ä–∞–∂–µ–Ω–∏—è –º–æ–∂–Ω–æ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å,‚Å°
## ‚Å°‚Å£‚Å¢‚Å£–ø–æ–ª—É—á–∞—è –≤—Å–µ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö –∏ –ª—é–±—ã–º –æ–±—Ä–∞–∑–æ–º.‚Å°
##‚Å°‚Å£‚Å¢‚Å£ –ß–µ–º –≥–ª—É–±–∂–µ –≤—ã –±—É–¥–µ—Ç–µ –∏–∑—É—á–∞—Ç—å Python –∏ –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –≤ –Ω–µ–º, —Ç–µ–º –ª—É—á—à–µ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–Ω–∏–º–∞—Ç—å ‚Å°‚Å£‚Å¢‚Å£—Ä–∞–±–æ—Ç—É —Å –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏.‚Å°
## ‚Å°‚Å£‚Å¢‚Å£–°–æ –≤—Ä–µ–º–µ–Ω–µ–º –≤—ã –ø–æ–π–º–µ—Ç–µ, –∫–∞–∫ —Å–æ–µ–¥–∏–Ω—è—Ç—å —á–∞—Å—Ç–∏ –∫–æ–¥–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω—É–∂–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.‚Å°
#
#Song3 = "Think I'm joking When I'm talking About blowing my hed open"
#print(f'First: {Song3[0]}\nLast: {Song3[-1]}')
##First: T
##Last: n
#
#print()
## ‚Å°‚Å¢‚Å£‚Å°‚Å¢‚Å£‚Å£by the way , –µ—Å–ª–∏ –Ω–∞–º –¥–∞–Ω–Ω–æ –¥–≤–µ –ø–µ—Ä–µ–º–µ–Ω—ã—Ö —Ç–∏–ø–∞ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –∏ –º—ã –¥–æ–ª–∂–Ω—ã –∏—Ö —Å–ª–æ–∂–∏—Ç—å –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —Ç–æ —ç—Ç–æ –¥–µ–ª–∞–µ–º —Ç–∞–∫‚Å°
## ‚Å°‚Å¢‚Å£‚Å¢–∑–∞ –æ–¥–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–∏–º —á—Ç–æ –¥–µ–ª–∞–µ—Ç title() and capitalize()‚Å°
#
#na  = "michael".capitalize() #They dont'tcare about us
#su  = "jackson".capitalize() #Beat it
#
#n  ="jim carry".title()
#s  ="sylvester stallone ".title()
#f  ="megan fox".capitalize()
#
#
#print(n) # => Jim Carry
#print(s) # => Sylvester Stallone
#print(f) # => Megan fox
#
#
#print(na , su )
#print(na +'', su )
#print(f'{na} {su}')
#print('{} {}'.format(na, su )) # => Michael Jackson
## –Ω–∞–¥–µ—é—Å—å –≤—ã –ø–æ–Ω—è–ª–∏
#
#print()
#
## ‚Å°‚Å¢‚Å£‚Å¢lower /find /replace‚Å°
#
#moon = 'Python'
#
#print(moon.upper()) # => PYTHON –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
#
#print(moon.lower()) # => pyhton –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
#
#print(moon.find('h')) # => 3 –ø–æ–∏—Å–∫ –∏ –æ—Ç–≤–µ—Ç
#
#print (moon.replace('thon', 'fish')) # => Pyfish –∑–∞–º–µ–Ω—è–µ—Ç
#
#print()
#
## ‚Å°‚Å¢‚Å£‚Å¢–í—Å–µ–≥–æ –≤ Python –µ—Å—Ç—å 4 –±–∞–∑–æ–≤—ã—Ö —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö / –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:‚Å°
#
## 1 = ‚Å°‚Å¢‚Å£‚Å¢Integer‚Å° - —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞;
## 1.12 = ‚Å°‚Å¢‚Å£‚Å¢Float‚Å° - —á–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π;
## "–ü—Ä–∏–≤–µ—Ç" = ‚Å°‚Å¢‚Å£‚Å¢String‚Å° - —Å—Ç—Ä–æ–∫–∏;
## True = ‚Å°‚Å¢‚Å£‚Å¢Boolean‚Å° - —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –ª–∏–±–æ False, –ª–∏–±–æ True.
#
#number1 = 2022
#number2 = 88
#result = number1 + number2
#result2 = result + 890 # 3000 = 2110 + 890
#print(number1 + number2) # 1) 2022 + 88 = 2110 you think answer 2100 ha-ha-ha ( women ( coffee ) )
#
#print()
#
##print(result) Answer 2110
#
#print(result2) # 2) do you get it ? of course , it's easy
#
#print()
#
## –ú–æ–∂–Ω–æ –µ—â—ë —Ç–∞–∫
#print ( 70 * (3 + 5) / (9 - 2) ) # 3+5=8, 9-2=7, 70*8=560, 560/7=80 { 80.0 }
#
## –ø—Ä–∏ –¥–µ–ª–µ–Ω–∏–∏–π –µ—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º —É–≤–∏–¥–µ—Ç —á–∏—Å–ª–æ—Ç –±–µ–∑ –ø–ª–∞–≤–∞—é—à–µ–π —Ç–æ—á–∫–∏ –º—ã –º–æ–∂–µ–º use { // } or int
#print(560//7 ) # => 80
#
## –∏—â—ë –µ—Å—Ç—å { % } –≤ python –Ω–∞–º –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –Ω–µ —Å–∞–º –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç —Ü–∏—Å–ª–∞ –∞ –æ—Å—Ç–∞—Ç–æ—Ç –æ—Ç —Ü–∏—Å–ª–∞ –∫ –ø—Ä–∏–º–µ—Ä—É
#print(243 % 3) # => 0 –æ—Å—Ç–∞—Ç–æ–∫
#print(215 % 15) # => 5 –æ—Å—Ç–∞—Ç–æ–∫
#
#print()
#
## ‚Å°‚Å¢‚Å£‚Å£–ú—ã –µ—â—ë –º–æ–∂–µ–º –≤–≤–æ–¥–∏—Ç—å —á–∏—Å–ª–∞ –≤ number1 and number2‚Å°
## ‚Å°‚Å¢‚Å£‚Å¢–î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º input –∞  int ( Integer ) –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞‚Å°
#
#numb1 = int (input ("number1 ")) # –≤–≤–æ–¥–∏–º –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ
#numb2 = int (input ("number2 ")) # –≤–≤–æ–¥–∏–º –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ
#res = numb1 + numb2 # { + }
#print(res) # By the way , print —ç—Ç–æ —Ç–∏–ø–∞ –∏—Ç–æ–≥–∞ , –æ–Ω –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∫–æ–¥
#
#print()
#
## –ù–µ —Ç–æ–ª—å–∫–æ { + } –Ω–æ –∏ –¥—Ä—É–≥–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π { - } { * } { / }
#
#num1 = int (input ("number1 ")) # –≤–≤–æ–¥–∏–º –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ
#num2 = int (input ("number2 ")) # –≤–≤–æ–¥–∏–º –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ
#print(num1 - num2)
#
#print()
#
## ‚Å°‚Å¢‚Å£‚Å¢–µ—Å—Ç—å –µ—â—ë float —á–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π ( —ç—Ç–æ —Ç–∏–ø–∞ –¥–µ—Å—è—Ç–∏—á–Ω–æ–µ —á–∏—Å–ª–æ ) –Ω—É —Ç–∏–ø–∞ 10.5 + 1.5 = 12.0‚Å°
#
#nu1 = float ( input ("number1 ")) # –≤–≤–æ–¥–∏–º –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ
#nu2 = float ( input ("number2 ")) # –≤–≤–æ–¥–∏–º –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ
#
#print (nu1 + nu2)  #{ + }
#print(nu1 - nu2)   #{ - }
#print (nu1 * nu2) #{ * }
#print(nu1 / nu2)  #{ / }
#
#print()

## ‚Å°‚Å¢‚Å£‚Å¢–ï—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º –æ–∫—Ä—É–≥–ª–∏—Ç—å –º—ã use round()‚Å°
#
#ph = 10.6245
#
#print(round(ph, 0)) # => 11.0  =>–≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –∫–æ–¥—É –¥–æ —á–µ–≥–æ –æ–∫—Ä—É–≥–ª—è—Ç—å ...
#print(round(ph, 1)) # => 10.6
#print(round(ph, 2)) # => 10.62
#
#print()
#
##–∏ —á—Ç–æ –±—ã —Å–¥–µ–ª–∞—Ç—å —Å—Ç–µ–ø–µ–Ω—å –º—ã use { ** }
#
#n1 = int( input ( "number1 ")) # –≤–≤–æ–¥–∏–º –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ
#n2 = int( input ("number2 "))# –≤–≤–æ–¥–∏–º –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ
#
#print ( n1 ** n2)
#print(pow(n1, n2)) # –≤ —Å—Ç–µ–ø–µ–Ω –º–æ–∂–Ω–æ –∏—â—ë —Å –∫–æ–º–∞–Ω–¥–æ–π pow()
#print(pow(2, 3)) # => 8
#
## –Ω—É –∏–ª–∏ —Ç–∞–∫
#print( n1.__pow__(n2))
#
#print()
#
## ‚Å°‚Å¢‚Å£‚Å¢–∞ –µ—Å–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –Ω—É —Ç–∏–ø–∞ –º–æ–¥—É–ª { ùóÆùóØùòÄ }‚Å°
#print(abs (-78)) # => 78
## –Ω—É –∏–ª–∏ —Ç–∞–∫
#Abs = -23
#
#print(Abs.__abs__()) # => 23
#–∞ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å  –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ , –±–µ–∑ –ø—Ä–æ–±–ª–µ–º
#print(-abs(99)) # => -99
#print()
#
##—á—Ç–æ-–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å –≤ –∫–æ–¥–µ –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª–∑–æ–≤–∞—Ç—å print (" Hello ")
#
#print("Code")
## –∏–ª–∏  str  ( String )
#print (str("Hello "))
#
#
## ‚Å°‚Å¢‚Å£‚Å¢–Ω–∞ –≤–≤–µ—Ä—Ö–Ω–µ–º –∫–æ–¥–µ –º—ã —Å–∫–ª–∞–¥—ã–≤–∞–ª–∏ –∏–ª–∏ –≤—ã—á–∏—Ç–∞–ª–∏ —á–∏—Å–ª–∞ , –ï–°–õ–ò –º—ã —Ö–æ—Ç–∏–º + —á–∏—Å–ª–∞ —Å —Ç–µ–∫—Å—Ç–æ–º –º—ã –Ω–µ –º–æ–∂–µ–º —Ç–∞–∫ ...‚Å°
##text = "Hey "
##number = 123456
##print ( text + number)  —É –Ω–∞—Å –≤—ã–π–¥–µ—Ç Error: etc.
## ‚Å°‚Å¢‚Å£‚Å¢–ú—ã –¥–æ–ª–∂–Ω—ã use str > —á—Ç–æ –±—ã –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å int –≤ str‚Å°
#
#print (str( 266 ) + " –ú–∞—Ä—à—Ä—É—Ç–∫–∞ " ) # str —É –Ω–∞—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–π –∏ —Ç–µ–∫—Å –º—ã –º–æ–∂–µ–º –ø–∏—Å–∞—Ç—å –≤ " "
#
#print()
#
#text = " abc"
#number = 123
#print (str(number)+ text)
#
#print()
#
#"Magic"
#
#w = 12345
#e = 654321
#
#print(w+e) # 666666
#
#print()
#
## ‚Å°‚Å¢‚Å£‚Å¢Lesson 3 /‚Å°‚Å¢‚Å£‚Å¢True and False type Bool‚Å°‚Å°
## ‚Å°‚Å¢‚Å£‚Å¢–ò—Å—Ç–∏–Ω–∞ –∏–ª–∏ –õ–æ–∂—å –ë—É–ª–µ–≤–æ–π —Ç–∏–ø –∑–Ω–∞—á–µ–Ω–∏–µ‚Å°
#
#
#a = 5
#b = 10
#print ( a == b) # False
#
#
#c = 3
#d = 6 - 3
#print (c == d) # True
#
#
#q = 5 > 10
#print (q) # False
#
#print()
#
#print(3==3) # True
#print(3==5) # False
#print(4!=5) # True /  4 –Ω–µ —Ä–æ–≤–Ω–æ 5
#print(5>=9) # False
#print(5 > 9 or 5 == 9 )
## –Ω–µ –∑–∞–±—ã–≤–∞–µ–º —á—Ç–æ or –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å true –µ—Å–ª–∏ –æ–¥–Ω–∞ –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤–µ—Ä–Ω–∞ –∞ –¥—Ä—É–≥–∞—è –Ω–µ—Ç
#print(3<=7) # True
#print(2>-3 and 5<8) # True / and –±—É–¥–µ—Ç —Å—á–∏—Ç—ã–≤–∞—Ç—å –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞
#print(3<7 and 9<4) # False / –µ—Å–ª–∏ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç –±—É–¥—É—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –±—É–¥—É—Ç False
#
#print()
#
#name2 ='Bektur'
#print(name2.startswith('B')) # True –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–≤—É—é –±—É–∫–≤—É , –µ—Å–ª–∏ –º—ã –≤–≤–µ–¥–µ–º 'b' –±—É–¥–µ—Ç False
#
#print(name2.endswith('r')) # True  –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏—é –±—É–∫–≤—É
#
#print(name2.isdigit()) # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ü–∏–≤—Ä—ã –≤ name2  /–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤—Å–µ —Ü–∏–≤—Ä—ã / False
#
#print(name2.isalpha()) # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –±—É–∫–≤—ã /  False
#
#print()
#
#
#login = 'Bob123'
#print ( input ( 'login ') == login ) # –ó–¥–µ—Å—å –º—ã –¥–æ–ª–∂–Ω—ã –≤–≤–µ—Å—Ç–∏ –ª–æ–≥–∏–Ω Bob123 –æ—Ç–≤–µ—Ç –≤—ã–π–¥–µ—Ç # True
## –ï—Å–ª–∏ –º—ã –≤–≤–µ–¥–µ–º –Ω–µ —Ç–æ—Ç –ª–æ–≥–∏–Ω –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–º –∑–∞–¥–∞–Ω —Ç–æ —ç—Ç–æ –±—É–¥—É—Ç # False
#
#print()
#
#x = ( input ("number_1 ")) #–≤–≤–æ–¥–∏–º –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ
#y = ( input ("number_2 ")) #–≤–≤–æ–¥–∏–º –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ
#
#print ( x < y )  # if x < y —ç—Ç–æ True if not False
#print ( x > y )  # if x > y —ç—Ç–æ True if not False
#print ( x == y ) # if x = y —ç—Ç–æ True if not False
#
#print()
#
#print( int ( True )) # 1
#print ( int ( False )) # 2
#print ( bool ( 1 )) # True
#print ( bool ( 0 )) # False
#
#print()
#
## –¢—É—Ç –µ—Å–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–º —è–∑—ã–∫–æ–º —Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ { 0 } —ç—Ç–æ –≤—Å–µ–≥–¥–∞ False, –Ω—É—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ , –Ω–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ
## –∞ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç { 1,2,3,4,5,6...} –¥–∞—é—Ç –Ω–∞–º True , –µ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –µ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
#
#print ( bool (0.00000000001)) # –¥–∞–∂–µ –µ—Å–ª–∏ —Ç–∞–∫–æ–µ —á–∏—Å–ª–æ —Ç–æ –≤—ã–π–¥–µ—Ç True –ø–æ—Ç–æ–º—É —á—Ç–æ –µ—Å—Ç—å —Ä—É–∑—É–ª—å—Ç–∞—Ç > 0
#
#print ( bool ( )) # False , because empty string is the not result  { 0 } Without { '' } / { "" }
#
#print ( bool ( ' ' )) # True  , because a space/empty string is the result > 0
#print ( bool ( " " )) # True
#
#print()
#
## ‚Å°‚Å¢‚Å£ max , min –Ω—É —ç—Ç–æ –ª–µ–≥–∫–∞—è —Ç–µ–º–∞ ‚Å°
#
#mx = max (2, 5 , 9, 7)
#mn = min (9, 4, -2, 1)
#
#print(mx) # => 9
#print(mn) # => -2
#
#print()
#
## ‚Å°‚Å¢‚Å£‚Å¢Lesson 4 / –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ - —ç—Ç–æ —Ñ–∞–π–ª—ã —Å —à–∞–±–ª–æ–Ω–∞–º–∏ –∫–æ–¥–∞. —á—Ç–æ –±—ã —É–ø—Ä–æ—Å—Ç–∏—Ç—å —Ä–∞–±–æ—Ç—ã ,‚Å°
## ‚Å°‚Å¢‚Å£‚Å¢—á—Ç–æ –±—ã –≤—ã –Ω–µ –ø–∏—Å–∞–ª–∏ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –∫–æ–¥ –Ω–µ—Å–∫–æ–ª—å–æ–∫–æ —Ä–∞–∑.‚Å°
## –ë–∏–±–ª–∏–æ—Ç–µ–∫ –≤ Python —Ç—ã—Å—è—á–∏ –∑–Ω–∞—á–∏—Ç—å –∏ —Ç—ã—Å—è—á–∏ —Ä–∞–∑–Ω—ã—Ö —Ñ—É–Ω–∫–∏–π , –∑–∞–ø–æ–º–Ω–∏—Ç—å –≤—Å–µ —ç—Ç–æ –æ—á–µ–Ω—å —Å–ª–æ–∂–Ω–æ.
## –ù–æ –º—ã –¥–æ–ª–∂–Ω—ã –∑–∞–Ω—Ç—å –æ—Å–Ω–æ–≤—ã , —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –Ω–∞—á–∞–ª–æ ,
## —Å–æ –≤—Ä–µ–º–µ–Ω–µ–Ω –∏ —Ä–∞–±–æ—Ç–æ–π —Å —ç—Ç–∏–º –º—ã —Å—Ç–∞–Ω–µ—Ç–µ –æ–ø—ã—Ç–Ω–µ–µ –∏ –Ω–∞—á–Ω–µ—Ç–µ use –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫–∏—Ü–∏ –∏–ª–∏ —ç—Ñ–µ–∫—Ç–∏–≤–Ω–æ use –∏—Ö .
#
## –ö –ø—Ä–∏–º–µ—Ä—É –∫–æ–º–∞–Ω–¥–∞ type() –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –¥–∞–Ω–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ , —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
#
#print(type('TEXT')) # => < class 'str'>
#print(type(2022)) # => < class 'int' >
#print(type(6.4)) # => < class 'float' >
#print(type(True)) # => < class 'bool' >
#
## and
#
#print(type({"google",17})) # set => set => –Ω–∞–±–æ—Ä
#
#get = ("fuel", "doom" ,  314, 34.3)
#print(type(get)) # tuple => –∫–æ—Ä—Ç–µ–∂ , –µ–≥–æ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç , –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–æ —É—Å—Ç–æ–π—á–∏–≤–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è , –Ω—É —Ç–∏–ø–∞ —Ñ–∞–∫—Ç
#
#get2 = "dgsdf" , "gsrg" , 22, 23.5 , True , False
#
##get2 = list(get2)
## –Ω–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç –∫–æ—Ä—Ç–µ–∂ —Ç–æ –≤–æ—Ç —Ç–∞–∫
##get2 = set(get2)
#
#get3 = ["qwerty", "ytrewq", 23.3 , 5]
#print(type(get3)) # list => –°–ø–∏—Å–æ–∫
#
#print(["fsedgz", 34]) # list
#print(list('Python')) # => 'P', 'y', 't', 'h', 'o', 'n'
#
#get4 = ['–°–µ—Ä–≥–µ–π', '–ú–∞—Ä–∏—è', '–ê–Ω—Ç–æ–Ω']
#print(get4)
#
#print(get4) # =>'–°–µ—Ä–≥–µ–π', '–°–∞—à–∞', '–ê–Ω—Ç–æ–Ω'
#
#print(get4[-1])# => '–ê–Ω—Ç–æ–Ω'
#


#get5 = [23, 4.6, 'code', True]
##get6=get5
###get6.reverse()
#print(get5)
##—Å–ø–æ—Å–æ–±—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫
#
##get5.append(312)
#get5.insert(2, 'python')
##get5.extend(get4)
##get5 += get3
#print(get5)
##–∏–∑–º–µ–Ω–µ–Ω–∏–µ

#get5[3], get5[2] = get5[2], get5[3]
#get5[0] /2 , *2 , ...
#get5[3] = False
#get5[0, 1] = [False]
#get5[2] = get5[get5.index('code')].replace('c', '')
#get5[2] = get[2].replace('c', '')
#get5.reverse()

#get6 = [ 12, 4.6, 59.3, 6, False, 1]
#get6.sort()
#get6.sort(reverse=True)
#get6 = ['tesla', 'amazon', 'facebook', 'apple']
#get6.sort()
#get6.sort(key=len)
#print(get6)


#—É–¥–∞–ª–µ–Ω–∏–µ

#get5.remove(4.6)
#get5.pop(3)  / '–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è' = get5.pop(3) => True
#del get5[1:4]
#get5 = [i for i in get5 if i != 4.6]

#print(get5)

#copy
#
#a = ['true', '–≥–æ—Ä–æ–¥312', 'cdm', 'home', 'false']
#
#b = a.copy()
#
#c = a
#c[1] = '–ú–æ—Å–∫–≤–∞'
#
#print(b is a) #False
#print(id(b), id(a))
#
#print(c is a ) #True
#print(id(c), id(a))
#
#print(a)
#print(b)
#print(c)
#
##‚Å°‚Å¢‚Å£‚Å¢ Lesson 5 :  if / elif / else { +/- }‚Å°
#
#
#po = 0
#
#
#if po == 0 :
#    po += 1 # => 0 + 1 = 1
#
#print(6/po) # => 6 , 6 / 1 = 6
#
## –µ—Å–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –¥—Ä—É–≥–æ–µ —á–∏—Å–ª–æ , –∫ –ø—Ä–∏–º–µ—Ä—É 2 , —É –Ω–∞—Å po –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É if
## –∏ —É –Ω–∞—Å —ç—Ç–æ—Ç –∫–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –¥—Ä—É–≥–æ–º—É
#
#po2 = 2
#
#if po2 == 0:
#    po2 +=1
#
#print(6/po2) # => 6 / 2 = 3
#
## –ö–æ–¥ —á–∏—Ç–∞–µ—Ç—Å—è —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑ / —Å–ª–µ–≤–∞ –Ω–∞ –ø—Ä–∞–≤–æ
#
#po3 = 0 # –∏–∑-–∑–∞ —Ç–æ–≥–æ —á—Ç–æ —É –Ω–∞—Å x —Ä–∞–≤–µ–Ω –Ω—É–ª—é —É –Ω–∞—Å –≤—ã—Ö–æ–¥–∏—Ç if
#
#
#if po3 == 0 :
#    print('if')
#
## –µ—Å–ª–∏ x –±—ã–ª –±—ã –±–æ–ª—å—à–µ –Ω—É–ª—è —Ç–æ –≤—ã—Ö–æ–¥–∏–ª–æ –±—ã elif
#
#elif po3 > 0 :
#    print('elif')
#
## –∞ –µ—Å–ª–∏ –æ–Ω –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –Ω–∏ –æ–¥–Ω—É –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç else
#
#else :
#    print('else')
#
#po4 = int and float (input())
#
#if po4 == 0 :
#    print("po4 = 0 ")
#
#elif po4 < 0 :
#    print("po4 < 0")
#
#elif po4 > 0 :
#    print("po4 > 0")
#
#print()
#
#sm = ''
#
#if sm == 'Sun' or sm == '–°–æ–ª–Ω—Ü–µ':
#    print('Day')
#
#elif sm == 'Moon' or sm =='–ù–æ—á—å':
#    print('Night')
#
#else :
#    print("Day or Night , I don't Know Bro")
#
#
#print()
#
#ul = 3
#
#if ul == 0:
#    ul = 1
#    print('ul –±—ã–ª —Ä–∞–≤–µ–Ω –Ω—É–ª—é ) ul = 1')
#
#elif type (ul) == type(9) or type (ul) == type(9.9):
#    print('ul –¥–æ–ø—É—Å—Ç–∏–º—ã —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö')
#
#else:
#    print('ul –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö')
#
#
#print(100/ul)
#
## in –æ–Ω –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –≤ –ø—Ä–∞–≤–æ–º —Ç–µ–∫—Å—Ç–µ —Å–∏–º–≤–æ–ª—ã –∫–∞–∫ –≤ –ª–µ–≤–æ–º , –µ—Å–ª–∏ –¥–∞ —Ç–æ –º—ã —É–≤–∏
#
#print("Ok" in " are you Ok") # => True
#
#love = "you" in "I love you"
#
#if love == True:
#    print("You :)")
#
#print()
#
#password = input("–ü—Ä–∏–¥—É—Å–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å —Å–æ—Å—Ç–æ—è—â–∏–π—Å—è –∏–∑ 6 –∏–ª–∏ –±–æ–ª–µ–µ —Å–∏–º–≤–æ–ª–æ–≤ ")
#
#if  len (password) >= 6:
#    print("all Ok ")
#
#else:
#    print("–ø–∞—Ä–æ–ª—å –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç , –ø—Ä–∏–¥—É–º–∞–π—Ç–µ –¥—Ä—É–≥–æ–π ")
#
#print()
#a=int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –ê: "))
#b=int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –í: "))
#if a%b == 0:
#    print("YES")
#else:
#    print("NO")
## ‚Å°‚Å¢‚Å£‚Å¢Lesson 6 –¶–∏–∫–ª—ã   while , for ‚Å°
#
#wi = 0
#while True:
#    print("Hello")
#    wi += 1
#    if wi  == 3:
#        break # –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–∏–∫–ª
#
#
##‚Å°‚Å¢‚Å£‚Å¢ ‚Äçwhile —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –∫–æ—Ç–æ—Ä–∞—è –±—É–¥—É—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –µ—Å–ª–∏ –µ–≥–æ –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥–∞–π break‚Å°
#
#print('\n')
#
##  –º–æ–∂–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å while –∏ –¥—Ä—É–≥–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
#
#wi2  = 0
#while wi2 != 3 : # —Ç—É—Ç –º—ã —É–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É —á—Ç–æ c –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 4 –∏ –º—ã —É–≤–∏–¥–µ–º 4 —Å–ª–æ–≤ World –ø–æ—Ç–æ–º—É —á—Ç–æ —É –Ω–∞—Å s –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0
#    print("World")
#    wi2 += 1
#
#print('\n')
#
#wi3 = 0
#while wi3 != 12:
#    #print (wi3)
#    wi3 += 1
#    if wi3 == 9 :
#        print("Nine nine nine = 9")
#        continue # –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å / –ø–µ—Ä–µ—Ä—ã–≤–∞—Ç—å/ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å
#    print(wi3)
#
#print('\n')
#
## –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç
#
#wi4 = 10
#while wi4 != 0 :
#    print(wi4)
#    wi4 -= 1
#
#print('\n')
#
## —Ñ–∞–∫—Ç–æ—Ä–∏—è–ª n!
#
#while True :
#    wi5 = int(input(">"))
#    wi6 = 0
#    wi7 = 1
#
#    while wi6 < wi5 :
#        wi6 += 1
#        wi7 *= wi6
#        #print(wi6)
#
#    else:
#        print(wi7)
#        break
#
#print('\n')
#
#
## ‚Å°‚Å¢‚Å£‚Å¢ùó≥ùóºùóø –ø–µ—Ä–µ–±–µ—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ , –æ–±—å–µ–∫—Ç—ã‚Å°
#
#word = 'Python'
#
#for let in word:
#    print(let) # P y t h o n / –ø–æ–≤–µ—Ä—Ç–∏–∫–∞–ª–∏
#
#print()
#
#for let in word:
#    print(let, end='') # Python
#
#print()
#
#for let in word :
#    print(f'{let} - {word.index(let)}') #index
#
#
#print()
#
#wi8 = 1
#for let in word:
#    print(f'{let} - {wi8}')
#    wi8 += 1
#
#print()
#
#wi8 = 1
#for let in word:
#    print(f'{let} - {wi8}')
#    wi8 += 1
#    if let == 'y':
#        break
#
#print()
#
#wi8 = 1
#for let in word:
#    if let == 'h':
#        continue
#    print(f'{let} - {wi8}')
#    wi8 += 1
#
#print()
#
#for f in range(1,6): # ‚Å°‚Å¢‚Å£‚Å¢range —ç—Ç–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–∏—Å–µ–ª‚Å°
#    print(f*f)
#
#print()
#
#for r in range (1,6):
#    for p in range (1,4):
#        print(f'r {r} - p {p}')
#
#print()
#
#wi9 = '–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è'
#xi = input ("Text:\n")
#
#for i in wi9:
#    count = 0
#    for r in xi :
#        if i == r:
#            count += 1
#    if count > 0 :
#        print('–ë—É–∫–≤', i, '–±—ã–ª–æ', count)
#
#print()
#
#english = "qwertyuiop[]asdfghjkl;'zxcvbnm,."
#russion = "–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é"
#
#while True:
#    inp =input("\n–í–≤–æ–¥ —Å–ª–æ–≤: ")
#    for i in inp :
#        if i in english:
#            print(russion[english.index(i)], end='')
#        else:
#            print(english[russion.index(i)], end='')
#
#
#
#print()
#
#
#numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
#for number_1 in numbers:
#    for number_2 in numbers:
#        print(number_1, '*', number_2, '=', number_1 * number_2)
### ‚Äã‚Äå‚Äç‚Äå‚Å°‚Å£‚Å¢‚Å£–£–≥–∞–¥–∞–π —á—Ç–æ –±—É–¥–µ—Ç —Å —ç—Ç–æ–∏–º –∫–æ–¥–æ–º‚Å°‚Äã
#

#‚Å°‚Å¢‚Å£‚Å¢ –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ —Å–ø–∏—Å–∫—É –∏–ª–∏ –ø–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É —á–∏—Å–µ–ª –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ ‚Äî –≤—ã–∑—ã–≤–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é reversed()‚Å°
#
#for i in reversed(range(1, 6)):
#    print(i, '–±–æ–º–º!')
#
#print('C –Ω–æ–≤—ã–º –≥–æ–¥–æ–º!')

# ‚Å°‚Å¢‚Å£‚Å¢Lesson 7 / –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏  def ‚Å°‚Å¢‚Å£‚Å¢, –°–ª–æ–≤–∞—Ä–∏ –∏ –ú–Ω–æ–∂–µ—Å—Ç–≤–∞ ‚Å°

#def hello ():
#    print("How are you?")
#
#print("Hello")
#
#hello()
#
#
#
#def hello(name):
#    print('Hello ' + name )
#
#hello('Jonh')
#hello('Anna')
#hello('Bitch')


#def hello(name, thing):
#    print(name + ', –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è! –î–µ—Ä–∂–∏ ' + thing)
#
#hello('–°–µ—Ä–≥–µ–π','—Ç—Ä—É—Å—ã')


#
#
#def _home(name='–ò–Ω–∫–æ–≥–Ω–∏—Ç–æ', planet='–ò–∫—Å'):
#    print(name + ' –∂–∏–≤—ë—Ç –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ ' + planet)
#
#
#_home('–ë–æ—Å—Å')
#
#
#def home(name='–ò–Ω–∫–æ–≥–Ω–∏—Ç–æ', planet='–ò–∫—Å'):
#    print(name + ' –∂–∏–≤—ë—Ç –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ ' + planet)
#
#home(planet='–ó–µ–º–ª—è')
#home(planet='–ó–µ–º–ª—è', name='–í–∏–Ω–Ω–∏ –ü—É—Ö')
#playlist = {
#    'Venus',
#    'Yesterday',
#    'Fireball',
#    'Time',
#    'Poison'
#}
#cities = [
#    '–í–æ–ª–æ–≥–¥–∞',
#    '–ß–µ–±–æ–∫—Å–∞—Ä—ã',
#    '–¢–æ–ª—å—è—Ç—Ç–∏',
#    '–ú–æ—Å–∫–≤–∞',
#    '–ë—Ä–µ–º–µ–Ω',
#    '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
#    '–ù–æ–≤–æ—Ä–æ—Å—Å–∏–π—Å–∫',
#    '–ß–µ–ª—è–±–∏–Ω—Å–∫',
#    '–í–æ–ª–æ–≥–¥–∞',
#    '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫',
#    '–ß–µ–ª—è–±–∏–Ω—Å–∫',
#    '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
#    '–ú–æ—Å–∫–≤–∞',
#    '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫'
#]
#
#unique_cities = set(cities)
#
#for i in unique_cities:
#    print(f'- {i}')
#
#
#
#
#
#

#playlist.add('Thunderstruck') # add() —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∫ –º–Ω–æ–∂–µ—Å—Ç–≤—É
#print(playlist)
## –ë—É–¥–µ—Ç –Ω–∞–ø–µ—á–∞—Ç–∞–Ω–æ:
## {'Yesterday', 'Fireball', 'Thunderstruck', 'Poison', 'Venus', 'Time'}
## –≠–ª–µ–º–µ–Ω—Ç—ã –º–Ω–æ–∂–µ—Å—Ç–≤ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–æ–±–ª—é–¥–∞—é—Ç –ø–æ—Ä—è–¥–æ–∫!
#
#playlist_1 = {'–¢—Ä–∏ –±–µ–ª—ã—Ö –∫–æ–Ω—è', 'Happy new year', '–°–Ω–µ–∂–∏–Ω–∫–∞'}
#playlist_2 = {'Last christmas', '–°–Ω–µ–∂–∏–Ω–∫–∞', 'Happy new year'}
#playlist_3 = playlist_1.union(playlist_2)    #union() –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–∞
#
#print(playlist_3)
#

#
#def print_valid_cities(a, b):
#    diff = all_cities.difference(used_cities)
#    for city in diff:
#        print(city)
#    # –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –º–Ω–æ–≥–æ—Ç–æ—á–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏, –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞
#    # –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã all_cities –∏ used_cities,
#    # –∞ –∑–∞—Ç–µ–º –ø–µ—á–∞—Ç–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
#
#all_cities = {
#    '–ê–±–∞–∫–∞–Ω',
#    '–ê—Å—Ç—Ä–∞—Ö–∞–Ω—å',
#    '–ë–æ–±—Ä—É–π—Å–∫',
#    '–ö–∞–ª—É–≥–∞',
#    '–ö–∞—Ä–∞–≥–∞–Ω–¥–∞',
#    '–ö–æ—Å—Ç—Ä–æ–º–∞',
#    '–õ–∏–ø–µ—Ü–∫',
#    '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫'
#}
#
#used_cities = {'–ö–∞–ª—É–≥–∞', '–ê–±–∞–∫–∞–Ω' , '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫'}
#
#print_valid_cities(all_cities, used_cities)
##
#def get_together_games(games_1, games_2):
#    # –ù–∞–ø–∏—à–∏—Ç–µ –∑–¥–µ—Å—å –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–π
#        #return together_games
#        return set(games_1).intersection(set(games_2)) # intersection() —Ç–∏–ø–∞ –ø–æ–∏—Å–∫–æ–≤–∏–∫
#
#anfisa_games = [
#    'Online-chess',
#    '–ì–æ—Ä–æ–¥–∞',
#    'DOOM',
#    '–ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏'
#]
#alisa_games = [
#    'DOOM',
#    'Online-chess',
#    '–ì–æ—Ä–æ–¥–∞',
#    'GTA',
#    'World of tanks'
#]
## –í—ã–∑–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —Å–æ —Å–ø–∏—Å–∫–∞–º–∏ –∏–≥—Ä –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
#together_games = get_together_games(anfisa_games, alisa_games)
## –ù–∞–ø–µ—á–∞—Ç–∞–π—Ç–µ –∏—Ç–æ–≥–æ–≤—ã–π –ø–µ—Ä–µ—á–µ–Ω—å –∏–≥—Ä –≤ —Ü–∏–∫–ª–µ
#for i in together_games:
#    print(f'üëæ {i}')
#
##–ó–∞–¥–∞—á–∞ 3
##–ë–æ—Ç –ê–Ω—Ñ–∏—Å–∞ –∏ –±–æ—Ç –ê–ª–∏—Å–∞ —Ö–æ—Ç—è—Ç —Å—ã–≥—Ä–∞—Ç—å –≤–æ —á—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ —Å–µ—Ç–∏. –ö–∞–∂–¥–∞—è –∏–∑ –Ω–∏—Ö —Å–æ—Å—Ç–∞–≤–∏–ª–∞ —Å–ø–∏—Å–æ–∫ –∏–≥—Ä, –≤ –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω–∞ —É–º–µ–µ—Ç –∏–≥—Ä–∞—Ç—å. –°–ø–∏—Å–∫–∏, –∫
##–í–∞–º –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–π–¥—ë—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –¥–≤—É—Ö —Å–ø–∏—Å–∫–∞—Ö.
##
#dump = {
#    1: '–µ–¥–∏–Ω–∏—Ü–∞',               # –ö–ª—é—á - —á–∏—Å–ª–æ, –∑–Ω–∞—á–µ–Ω–∏–µ - —Å—Ç—Ä–æ–∫–∞.
#    '–∑–µ–º–ª—è–Ω–∏–∫–∞': '—è–≥–æ–¥–∞',       # –ò –∫–ª—é—á, –∏ –∑–Ω–∞—á–µ–Ω–∏–µ - —Å—Ç—Ä–æ–∫–∏.
#    '–ø–æ–º–∏–¥–æ—Ä': '—è–≥–æ–¥–∞',         # –ó–Ω–∞—á–µ–Ω–∏–µ '—è–≥–æ–¥–∞' - –Ω–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ. –¢–∞–∫ –º–æ–∂–Ω–æ.
#    False: 0,                   # –ö–ª—é—á - –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –∑–Ω–∞—á–µ–Ω–∏–µ - —á–∏—Å–ª–æ.
#    '–ª—É–∫': ['–æ–≤–æ—â', '–æ—Ä—É–∂–∏–µ'],  # –ö–ª—é—á - —Å—Ç—Ä–æ–∫–∞, –∑–Ω–∞—á–µ–Ω–∏–µ - —Å–ø–∏—Å–æ–∫.
#                                # –ö–ª—é—á - —Å—Ç—Ä–æ–∫–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ - —Å–ª–æ–≤–∞—Ä—å. –¢–∞–∫ —Ç–æ–∂–µ –º–æ–∂–Ω–æ!
#    '–∞–Ω–≥–ª–æ-—Ä—É—Å—Å–∫–∏–π —Å–ª–æ–≤–∞—Ä—å': {'—Ä—É–∫–∞': 'hand',
#                              '–Ω–æ–≥–∞': 'leg',
#                              '–±—ç–∫–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫': 'back-end developer'
#                               },
#}
#
#print(dump['–ª—É–∫'])
## –ë—É–¥–µ—Ç –Ω–∞–ø–µ—á–∞—Ç–∞–Ω–æ ['–æ–≤–æ—â', '–æ—Ä—É–∂–∏–µ']
#
#english = {
#    '—Ä—É–∫–∞': 'hand',
#	'–Ω–æ–≥–∞': 'leg',
#    '—Ö–≤–æ—Å—Ç': 'tail',
#    '–ø–∏—Ç–æ–Ω': 'python',
#	'–±—ç–∫–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫': 'back-end developer'
#}
#
## –≠–ª–µ–º–µ–Ω—Ç—É —Å –∫–ª—é—á–æ–º '—Ä—É–∫–∞' –ø—Ä–∏—Å–≤–æ–∏–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
#english['—Ä—É–∫–∞'] = 'arm'
#
#print(english['—Ä—É–∫–∞'])
##
#english = {
#    '—Ä—É–∫–∞': 'arm',
#    '–Ω–æ–≥–∞': 'leg',
#    '—Ö–≤–æ—Å—Ç': 'tail',
#    '–ø–∏—Ç–æ–Ω': 'python',
#    '–±—ç–∫–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫': 'back-end developer'
#}
#
## –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ª–æ–≤–∞—Ä—è —á–µ—Ä–µ–∑ –¥–æ—Å—Ç—É–ø –ø–æ –∫–ª—é—á—É
#english['–≥–æ–ª–æ–≤–∞'] = 'head'
## –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω –∫–ª—é—á, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç –≤ —Å–ª–æ–≤–∞—Ä–µ ‚Äî –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ª–æ–≤–∞—Ä—è.
#print(english['–≥–æ–ª–æ–≤–∞'])
#
#
#–£ —Å–ª–æ–≤–∞—Ä–µ–π –µ—Å—Ç—å –º–µ—Ç–æ–¥ update(), –æ–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –¥–≤–∞ —Å–ª–æ–≤–∞—Ä—è, —Ç–æ –µ—Å—Ç—å –¥–æ–±–∞–≤–∏—Ç—å –≤ –æ–¥–∏–Ω —Å–ª–æ–≤–∞—Ä—å —ç–ª–µ–º–µ–Ω—Ç—ã –¥—Ä—É–≥–æ–≥–æ.
#english = {
#    '—Ä—É–∫–∞': 'arm',
#    '–Ω–æ–≥–∞': 'leg',
#    '—Ö–≤–æ—Å—Ç': 'tail',
#    '–ø–∏—Ç–æ–Ω': 'python',
#    '–±—ç–∫–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫': 'back-end developer',
#    '–≥–æ–ª–æ–≤–∞': 'head'
#}
#
## –û–±—ä—è–≤–∏–º –Ω–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å
#new_words = {'–º–æ–∑–≥': 'brain', '–ª–æ–≥–∏–∫–∞': 'logic'}
#
## –î–æ–±–∞–≤–∏–º –≤ —Å–ª–æ–≤–∞—Ä—å english —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ª–æ–≤–∞—Ä—è new_words
#english.update(new_words)
#1w3r5y7i9p0
#code1python
## –ü–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ —Ç–µ–ø–µ—Ä—å —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Å–ª–æ–≤–∞—Ä–µ english
#print(english)
#
## –ó–∞–æ–¥–Ω–æ –≤—ã—è—Å–Ω–∏–º, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ —Å–æ —Å–ª–æ–≤–∞—Ä—ë–º new_words
#print(new_words)
#

#–ó–Ω–∞—á–µ–Ω–∏—è –≤—Å–µ—Ö –∫–ª—é—á–µ–π –º–æ–∂–Ω–æ –∏–∑–≤–ª–µ—á—å –∏–∑ —Å–ª–æ–≤–∞—Ä—è –∏ —Å–æ–±—Ä–∞—Ç—å –≤ –æ–¥–Ω—É –∫–æ–ª–ª–µ–∫—Ü–∏—é. –î–ª—è —ç—Ç–æ–≥–æ —É —Å–ª–æ–≤–∞—Ä—è –µ—Å—Ç—å –º–µ—Ç–æ–¥ values():
# –°–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞—á–µ—Ä—Ç–∞–Ω–∏—è –±—É–∫–≤ –∏ –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è
#old_letters = {
#    '–ë–æ–≥–∞—Ç—ã–π': '–ë',
#    '–û–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–π': '–û',
#    '–ú–µ—Å—Ç–Ω—ã–π': '–ú',
#    '–ñ–∏—Ç–µ–ª—å': '–ñ'}
#
#print(old_letters.values())
## –ë—É–¥–µ—Ç –Ω–∞–ø–µ—á–∞—Ç–∞–Ω —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π —Å–ª–æ–≤–∞—Ä—è
## dict_values(['–ë', '–û', '–ú', '–ñ'])
#
#–ü–æ–¥–æ–±–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏ –∫–æ–ª–ª–µ–∫—Ü–∏—é –∫–ª—é—á–µ–π —Å–ª–æ–≤–∞—Ä—è, –¥–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å –º–µ—Ç–æ–¥ keys():
#
#favorite_songs = {
#    '–¢–æ–ø–æ–ª–∏–Ω—ã–π –ø—É—Ö': '–ò–≤–∞–Ω—É—à–∫–∏ international',
#    '–ì–æ—Ä–æ–¥ –∑–æ–ª–æ—Ç–æ–π': '–ê–∫–≤–∞—Ä–∏—É–º',
#    '–ó–≤–µ–∑–¥–∞ –ø–æ –∏–º–µ–Ω–∏ –°–æ–ª–Ω—Ü–µ': '–ö–∏–Ω–æ'
#}
#
#print(favorite_songs.keys())
## –ë—É–¥–µ—Ç –Ω–∞–ø–µ—á–∞—Ç–∞–Ω —Å–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π —Å–ª–æ–≤–∞—Ä—è
## dict_keys(['–¢–æ–ø–æ–ª–∏–Ω—ã–π –ø—É—Ö', '–ì–æ—Ä–æ–¥ –∑–æ–ª–æ—Ç–æ–π', '–ó–≤–µ–∑–¥–∞ –ø–æ –∏–º–µ–Ω–∏ –°–æ–ª–Ω—Ü–µ'])

#
#english = {
#    '—Ä—É–∫–∞': 'hand',
#    '–Ω–æ–≥–∞': 'leg',
#    '—Ö–≤–æ—Å—Ç': 'tail',
#    '–ø–∏—Ç–æ–Ω': 'python',
#    '–±—ç–∫–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫': 'back-end developer'
#}
## –°–æ–±–∏—Ä–∞–µ–º –∫–ª—é—á–∏ —Å–ª–æ–≤–∞—Ä—è –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é
## –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —ç—Ç—É –∫–æ–ª–ª–µ–∫—Ü–∏—é –≤ —Å–ø–∏—Å–æ–∫
#words_ru = list(english.keys())
#
## –°–æ–±–∏—Ä–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–æ–≤–∞—Ä—è –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é
## –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —ç—Ç—É –∫–æ–ª–ª–µ–∫—Ü–∏—é –≤ —Å–ø–∏—Å–æ–∫
#words_en = list(english.values())
#
## –ü–µ—á–∞—Ç–∞–µ–º —Å–ø–∏—Å–∫–∏
#print(words_ru)
#
#print(words_en)

#
#friends =  {
#    '–°–µ—Ä—ë–≥–∞': '–û—Ä–µ–Ω–±—É—Ä–≥',
#    '–°–æ–Ω—è': '–ú–æ—Å–∫–≤–∞',
#    '–ú–∏—à–∞': '–ú–æ—Å–∫–≤–∞',
#    '–î–∏–º–∞': '–ß–µ–ª—è–±–∏–Ω—Å–∫',
#    '–ê–ª–∏–Ω–∞': '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫',
#    '–ï–≥–æ—Ä': '–ü–µ—Ä–º—å',
#    '–ö–æ–ª—è': '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫'
#}
#
## –ó–¥–µ—Å—å –≤–∞—à –∫–æ–¥
#
#a = set(friends.values())
#
#for i in a:
#      print(i)
#
#favorite_songs = {
#    '–¢–æ–ø–æ–ª–∏–Ω—ã–π –ø—É—Ö': '–ò–≤–∞–Ω—É—à–∫–∏ international',
#    '–ì–æ—Ä–æ–¥ –∑–æ–ª–æ—Ç–æ–π': '–ê–∫–≤–∞—Ä–∏—É–º',
#    '–ó–≤–µ–∑–¥–∞ –ø–æ –∏–º–µ–Ω–∏ –°–æ–ª–Ω—Ü–µ': '–ö–∏–Ω–æ',
#    'Space Oddity': 'David Bowie',
#    '–†—ã–±–∞': '–ê–∫–≤–∞—Ä–∏—É–º',
#    '–°–µ—Ä–µ–Ω–∞–¥–∞ –¢—Ä—É–±–∞–¥—É—Ä–∞': '–ú—É—Å–ª–∏–º –ú–∞–≥–æ–º–∞–µ–≤',
#}
#
#for song, performer in favorite_songs.items():
#	print('–ü–µ—Å–Ω—é ' + song + ' –∏—Å–ø–æ–ª–Ω—è–µ—Ç ' + performer)
#–∫–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏–µ
#favorite_songs = {
#    '–¢–æ–ø–æ–ª–∏–Ω—ã–π –ø—É—Ö': '–ò–≤–∞–Ω—É—à–∫–∏ international',
#    '–ì–æ—Ä–æ–¥ –∑–æ–ª–æ—Ç–æ–π': '–ê–∫–≤–∞—Ä–∏—É–º',
#    '–ó–≤–µ–∑–¥–∞ –ø–æ –∏–º–µ–Ω–∏ –°–æ–ª–Ω—Ü–µ': '–ö–∏–Ω–æ',
#    'Space Oddity': 'David Bowie',
#    '–†—ã–±–∞': '–ê–∫–≤–∞—Ä–∏—É–º',
#    '–°–µ—Ä–µ–Ω–∞–¥–∞ –¢—Ä—É–±–∞–¥—É—Ä–∞': '–ú—É—Å–ª–∏–º –ú–∞–≥–æ–º–∞–µ–≤',
#}
## –ò–∑–≤–ª–µ—á—ë–º –∏ –Ω–∞–ø–µ—á–∞—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏—è (values) –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
#for singer in favorite_songs.values():
#	print('–î–æ–∫—Ç–æ—Ä, —è –±–æ–ª—å—à–µ –Ω–µ –º–æ–≥—É —Å–ª—É—à–∞—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ' + singer)
#
## –ê –≤ —ç—Ç–æ–º —Ü–∏–∫–ª–µ –∏–∑–≤–ª–µ—á—ë–º –∏ –Ω–∞–ø–µ—á–∞—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–ª—é—á–∏ (keys) —Å–ª–æ–≤–∞—Ä—è
#for music in favorite_songs.keys():
#	print('–î–æ–∫—Ç–æ—Ä, —è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø–æ —Ç—Ä–∏ —Ä–∞–∑–∞ —Å–ª—É—à–∞—é –ø–µ—Å–Ω—é ' + music)
#
#friends_names = ['–ê–Ω—è', '–ö–æ–ª—è', '–õ—ë—à–∞', '–õ–µ–Ω–∞', '–ú–∏—à–∞']
#friends_cities = ['–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫', '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫', '–ú–æ—Å–∫–≤–∞', '–û–±–Ω–∏–Ω—Å–∫', '–ß–µ–±–æ–∫—Å–∞—Ä—ã']
#
## –û–±—ä—è–≤–ª–µ–Ω –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å, –µ–≥–æ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏,
## –∫–∞–∂–¥—ã–π –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ—Å—Ç–∞–≤–ª–µ–Ω –ø–æ —Å—Ö–µ–º–µ "–∏–º—è: –≥–æ—Ä–æ–¥"
#friends =  {}
#
## –î–æ–ø–∏—à–∏—Ç–µ –≤–∞—à –∫–æ–¥ —Å—é–¥–∞
#for i in range(len(friends_names)):
#    friends[friends_names[i]] = friends_cities[i]
#
#
#print("–õ–µ–Ω–∞ –∂–∏–≤—ë—Ç –≤ –≥–æ—Ä–æ–¥–µ", friends['–õ–µ–Ω–∞'])
#
#friends =  {
#    '–°–µ—Ä—ë–≥–∞': '–û–º—Å–∫',
#    '–°–æ–Ω—è': '–ú–æ—Å–∫–≤–∞',
#    '–î–∏–º–∞': '–ß–µ–ª—è–±–∏–Ω—Å–∫',
#    '–ê–π–≥—É–ª—å': '–ö–∞–∑–∞–Ω—å',
#    '–ê–ª—ë–Ω–∞': '–ë–µ–ª–≥–æ—Ä–æ–¥',
#    '–î–∞–Ω–∏–∏–ª': '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
#    '–õ–µ–≤': '–¢—É–ª–∞',
#    '–í–∞–ª–µ—Ä–∞': '–°—ã–∫—Ç—ã–≤–∫–∞—Ä',
#    '–ê–Ω—Ç–æ–Ω': '–Ø–ª—Ç–∞',
#    '–ö–∞—Ä–µ–Ω': '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä'
#}
#
## –ó–¥–µ—Å—å –≤–∞—à –∫–æ–¥
#for key, value in friends.items():
#    print(f'{key} –∂–∏–≤—ë—Ç –≤ –≥–æ—Ä–æ–¥–µ {value}')
#
#
#friends = {
#    '–°–µ—Ä—ë–≥–∞': '–û–º—Å–∫',
#    '–°–æ–Ω—è': '–ú–æ—Å–∫–≤–∞',
#    '–î–∏–º–∞': '–ß–µ–ª—è–±–∏–Ω—Å–∫',
#    '–ê–ª–∏–Ω–∞': '–•–∞–±–∞—Ä–æ–≤—Å–∫',
#    '–ï–≥–æ—Ä': '–ü–µ—Ä–º—å'
#}
#
#def is_anyone_in(collection, city):
#    for collection, city in friends.items():
#            if city =='–•–∞–±–∞—Ä–æ–≤—Å–∫':
#                print(f'–í –≥–æ—Ä–æ–¥–µ {city} –∂–∏–≤—ë—Ç {collection}. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–π–¥—É –≤ –≥–æ—Å—Ç–∏!')
#            else:
#                print(f'–í –≥–æ—Ä–æ–¥–µ {city} —É –º–µ–Ω—è –µ—Å—Ç—å –¥—Ä—É–≥, –Ω–æ –º–Ω–µ —Ç—É–¥–∞ –Ω–µ –Ω–∞–¥–æ.')
#
#is_anyone_in(friends, '–•–∞–±–∞—Ä–æ–≤—Å–∫')
#
#–ú–æ–∂–Ω–æ –∏ —Ç–∞–∫ –≤—ã–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–∞—Ä—å
#a = dict(name='Anton', age='23')
#print(a)
#
### —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞
#b = dict([[0, 'zero'],[1, 'one'],[2, 'two'],[3, 'three'],[4, 'four'],[5, 'five'],[6, 'six'],[7, 'seven']])
##print(b)
#for i in b :
#    print(f'{i} {b[i]}')
#c = dict(enumerate('python'))
#print(c)





#DATABASE = {
#    '–°–µ—Ä—ë–≥–∞': '–û–º—Å–∫',
#    '–°–æ–Ω—è': '–ú–æ—Å–∫–≤–∞',
#    '–ú–∏—à–∞': '–ú–æ—Å–∫–≤–∞',
#    '–î–∏–º–∞': '–ß–µ–ª—è–±–∏–Ω—Å–∫',
#    '–ê–ª–∏–Ω–∞': '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫',
#    '–ï–≥–æ—Ä': '–ü–µ—Ä–º—å',
#    '–ö–æ–ª—è': '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫'
#}
#
#def process_anfisa(query):
#    if query == '–°–∫–æ–ª—å–∫–æ —É –º–µ–Ω—è –¥—Ä—É–∑–µ–π?':
#        count = len(DATABASE)
#        return '–£ —Ç–µ–±—è ' + str(count) + ' –¥—Ä—É–∑–µ–π.'
#    # –ó–¥–µ—Å—å –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è query —Ä–∞–≤–Ω–∞ —Å—Ç—Ä–æ–∫–µ '–ö—Ç–æ –≤—Å–µ –º–æ–∏ –¥—Ä—É–∑—å—è?'
#    elif query =='–ö—Ç–æ –≤—Å–µ –º–æ–∏ –¥—Ä—É–∑—å—è?':
#        friends_string = ''
#        # –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–µ—á–µ–Ω—å –¥—Ä—É–∑–µ–π -
#        # –ø–µ—Ä–µ–±–µ—Ä–∏—Ç–µ —Å–ª–æ–≤–∞—Ä—å DATABASE –≤ —Ü–∏–∫–ª–µ
#        for i in DATABASE:
#            friends_string += i + ' '
#
#                  # –î–æ–±–∞–≤–ª—è–π—Ç–µ –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π friends_string –∏–º—è –¥—Ä—É–≥–∞ –∏ –ø—Ä–æ–±–µ–ª
#        # –í–µ—Ä–Ω–∏—Ç–µ —Å—Ç—Ä–æ–∫—É, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–∑ '–¢–≤–æ–∏ –¥—Ä—É–∑—å—è: ' –∏ friends_string
#        return '–¢–≤–æ–∏ –¥—Ä—É–∑—å—è: ' + friends_string
#    elif query == '–ì–¥–µ –≤—Å–µ –º–æ–∏ –¥—Ä—É–∑—å—è?':
#        city = ''
#        a = set(DATABASE.values())
#        for i in a:
#            city += i + ' '
#
#        return '–¢–≤–æ–∏ –¥—Ä—É–∑—å—è –≤ –≥–æ—Ä–æ–¥–∞—Ö: ' + city
#    else:
#        return '<–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å>'
#
## –ù–µ –∏–∑–º–µ–Ω—è–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥
#print('–ü—Ä–∏–≤–µ—Ç, —è –ê–Ω—Ñ–∏—Å–∞!')
#print(process_anfisa('–°–∫–æ–ª—å–∫–æ —É –º–µ–Ω—è –¥—Ä—É–∑–µ–π?'))
#print(process_anfisa('–ö—Ç–æ –≤—Å–µ –º–æ–∏ –¥—Ä—É–∑—å—è?'))
#print(process_anfisa('–ì–¥–µ –≤—Å–µ –º–æ–∏ –¥—Ä—É–∑—å—è?'))
#
#
#numbers = [i for i in range(1,7)]
#numbers_2 = {i: i*i for i in numbers}
#
#print(numbers, numbers_2, sep='\n')
#
#name = ['Anton', 'Alex', 'Jony', 'Adam']
#age = [23, 12, 35, 19]
#
#date = dict(zip(name, age))
#print(date)
#
#date = {}
#a = 0
#
#while a != len(age):
#    date[name[a]] = age[a]
#    a += 1
#
#print(date)
#
#string = '–Ø –ø–∞–º—è—Ç–Ω–∏–∫ —Å–µ–±–µ –≤–æ–∑–¥–≤–∏–≥ –Ω–µ—Ä—É–∫–æ—Ç–≤–æ—Ä–Ω—ã–π'
#
#index = [0, 1, 2, 8, 6, 17, 24]
#
#for i in index:
#
#
#    print(string[i], end='')
#
#poem_str = 'I hate YOU'
#
## –ü—Ä–∏–º–µ–Ω—è–µ–º –∫ —Å—Ç—Ä–æ–∫–µ –º–µ—Ç–æ–¥ split(), –≤ —Å–∫–æ–±–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–±–µ–ª –≤ –∫–∞–≤—ã—á–∫–∞—Ö:
#words_list = poem_str.split(' ')
## –ü–µ—á–∞—Ç–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
#words_list[1] = 'love'
#
#print(words_list)
##
#a ={'–º—è—Å–æ', '–ª—É–∫', '–±–∞—Ä–∞–Ω', '–º–∞—Å–ª–æ'}
#b ={'–ª—É–∫','—Å–æ—É—Å', '–±–∞—Ä–∞–Ω', '—Ç–æ–º–∞—Ç', '–º—è—Å–æ'}
#print(a.intersection(b))
#print(a & b)
#print(a.difference(b))
#print(a - b )
#print(a.union(b))
#print(a | b)
#print(a.symmetric_difference(b))
#print(a ^ b )
#


#import socket
#hostname = socket.gethostname()
#IPAddr = socket.gethostbyname(hostname)
#print(IPAddr)
#
#import random
#import string
#
#chars = "qwertyuiopasdfghjklzxcvbnm"
#charsl = "QWERTYUIOPASDFGHJKLZXCVBNM"
#numbers = "0123456789"
##symbols = "!@#$%^&*()_-+=[]{ } \ | / ;: ,.<> ? *"
#all = chars + charsl + numbers #+ symbols
#
#password = ''.join(random.choice(all) for i in range(12))
#
#print(password)
#
#from turtle import *
#
#pensize(10)
#
#while 1:
#    forward(2)
#
#    right(5)
#
#exitonclick()
#
# import time
#
# a = 0
#
# while 1 :
    # a += 1
    # print(a)
    # time.sleep(1)
    # if a == 10 :
        # break

        # numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
# for number_1 in numbers:
    # for number_2 in numbers:
        # print(number_1, '*', number_2, '=', number_1 * number_2)


# import time
#
# a = 0
#
# while 1 :
    # a += 1
    # print(a)
    # time.sleep(1)
    # if a == 10 :
        # break
#
#
#a = ["beg", "life", "i", "to"]
#word = []
#num = []
#o = {}
#for i in a:
#    b = len(i)
#    word.append(i)
#    num.append(b)
#
#print(word)
#print(sorted(num))
#
#for word, num in o.items():
#    print(sorted(num))
#
# def romanToInt(s):
    # """
    # :type s: str
    # :rtype: int
    # """
    # romannumber = {
        # 'I' : 1,
        # 'V' : 5,
        # 'IV' : 4,
        # 'IX' : 9,
        # 'X' : 10,
        # 'XL': 40,
        # 'L' : 50,
        # 'XC': 90,
        # 'C': 100,
        # 'CD' : 400,
        # 'D' : 500,
        # 'CM': 900,
        # 'M' : 1000
    # }
    # num = 0
    # i = 0
    # while i < len(s):
        # if i + 1 < len(s) and s[i:i+2] in romannumber:
            # num += romannumber[s[i:i+2]]
            # i += 2
        # else:
            # num += romannumber[s[i]]
            # i += 1
#
    # return num
#
# print(romanToInt('XLIII'))
#
#
# x = 150 * ( 20_000_000 / 500) # how output : 6_000_000.0
# print(x)
#
#
# result = 150 * (20_000_000 / 500)
# print(f"{result:,.1f}".replace(',', '_'))
#
#
#
# menu = {
    # 'plov': {'rice', 'meat', 'carrot'},
    # 'manty': {'meat', 'dough', 'onion'},
    # 'pizza': {'cheese', 'dough', 'tomato'},
    # 'okroshka': {'kefir', 'sausage', 'cucumber', 'eggs'},
    # 'rolls': {'fish', 'rice', 'nori'}
# }
#
# while True:
    # word = set(input('>> ').lower().split())
    # if word == 'exit':
        # break
#
    # for key, value in menu.items():
        # if word.issubset(value):
            # print(key)
#
#
# def sum1 (num):
    # counter = 0
    # for i in num:
        # counter += i
    # return counter
#
# print(sum1([1,2,3,4,5,6,7,8,9]))
#
#
#
# def max1 (num):
    # max_num = num[0]
    # for i in num[1::]:
        # if max_num < i :
            # max_num = i
    # return max_num
#
# print(max1([1,2,3,4,5,6]))
#
#
# def min1 (num):
    # min_num = num[0]
    # for i in num[1::]:
        # if i < min_num :
            # min_num = i
    # return min_num
#
#
# print(min1([67,12,43,2,5]))
#
#

# a = 'Hello'
# b = 0
# for i in a:
    # b += 1
#
# print(b)
# print(len('Hello'))
#
# def len1(items):
    # counter = 0
    # for _ in items:
        # counter += 1
    # return counter
#
# print(len1('aplles'))
#
#
# def get_square (a, b):
    # return a * b
#
# q = get_square(10, 24)
# r = get_square(9, 23)
#
# print(q, r,  sep='\n')
#




#
#
#plov = {'rice', 'meat', 'carrot'}
#manty = {'meat', 'dough', 'onion'}
##
#print(plov.difference(manty))
#print(plov - manty)
##
#print(plov.intersection(manty))
#print(plov & manty)
##
#print(plov.union(manty))
#print(plov | manty)
##
#print(plov.symmetric_difference(manty))
#print(plov ^ manty)
#
# def num (a=[1,2,2,2,2,3], b=[2]):
    # ab = set(a)
    # if b[0] in ab:
        # ab.remove(b)
    # return list(ab)
#
#
# print(num())

#
# def num(a=[1, 2, 2], b=[2]):
    # for i in b:
        # if i in a:
            # a.remove(i)
    # return list(a)
#
# print(num())
#
# def num(a=[1, 2, 2], b=[2]):
    # a = [item for item in a if item not in b]
    # return a
#
# print(num())
#
# x = {1: 'Bogdan', 2: 'Alisa'}
# y = {3: 'Alex', 4: 'Margo'}
#
#d = x | y
#
#print(d)
# print(x | y)
#
#
